buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://plugins.gradle.org/m2/' }
        maven { url = 'https://dist.creeper.host/Sponge/maven' }
        maven { url = 'https://repo.spongepowered.org/maven/'}
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'idea'
apply plugin: 'maven-publish'

version = "${mc_version}-${mod_version}"
group = "${mod_group}"
archivesBaseName = "${mod_id}"

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
compileJava.options.encoding = compileTestJava.options.encoding = javadoc.options.encoding = 'UTF-8'

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: "official", version: "${mc_version}".toString()

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=" + "${mod_id}".toString() + ".mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                voltutils {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=" + "${mod_id}".toString() + ".mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                voltutils {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            arg "-mixin.config=" + "${mod_id}".toString() + ".mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            args '--mod', archivesBaseName, '--all',
                    '--existing', file('src/main/resources').toString(),
                    '--existing', file('src/generated/resources').toString(),
                    '--output', file('src/generated/resources/')

            mods {
                voltutils {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        // TOP
        name 'tterrag maven'
        url = "https://maven.tterrag.com/"
    }

    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }

    maven { url 'https://modmaven.dev/' }

    maven {
        name = "theillusivec4"
        url = "https://maven.theillusivec4.top/"
    }

    maven { url = 'https://libraries.minecraft.net/' }
    mavenCentral()
    maven { url = 'https://maven.minecraftforge.net/' }
    maven { url = 'https://maven.blamejared.com/'}

    flatDir name: 'lib', dirs: 'libs'
}

dependencies {
    minecraft "net.minecraftforge:forge:${version_forge}"

    annotationProcessor "org.spongepowered:mixin:0.8.2:processor"

    runtimeOnly fg.deobf(project.dependencies.create("mcjty.theoneprobe:TheOneProbe-${top_version}") {
        transitive = false
    })

    runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:${jei_version}")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${mc_version}-4.0.5.2")

    compileOnly "mekanism:Mekanism:${mekanism_version}:api"
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")

    implementation fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${immersive_version}")

    //compile fg.deobf("team.chisel.ctm:CTM:MC1.16.1-1.1.2.6")
}

jar {
    manifest {
        attributes(
                [
                        "Specification-Title": "${mod_name}",
                        "Specification-Vendor": "${mod_author}",
                        "Specification-Version": "${version}", // We are version 1 of ourselves
                        "Implementation-Title": "${mod_name}",
                        "Implementation-Version": "${version}",
                        "Implementation-Vendor" :"${mod_author}",
                        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                        "MixinConfigs": "${mod_id}.mixins.json"
                ],
        )
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}